name: Deploy

on:
  push:
    branches: [ main ]

concurrency:
  group: deploy-${{ github.ref }}
  cancel-in-progress: true

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      # 1) Checkout
      - name: Checkout
        uses: actions/checkout@v4

      # 2) Use Node 20.18+ (required by @solana/* v2 & commander@14)
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.18.x'
          check-latest: true
          cache: 'npm'
          cache-dependency-path: |
            bridge-react-app/package-lock.json
            package-lock.json

      # 3) Ensure dirs exist for secret-sourced files
      - name: Ensure directories
        run: |
          mkdir -p bridge-react-app/src
          mkdir -p bridge-react-app/public

      # 4) Create sensitive files from repo secrets
      - name: Create sensitive files
        shell: bash
        run: |
          echo "${{ secrets.MAIN_TS_BASE64 }}"        | base64 -d > main.ts
          echo "${{ secrets.BRIDGE_JSX_BASE64 }}"     | base64 -d > bridge-react-app/src/useBridge.jsx
          echo "${{ secrets.APP_JSX_BASE64 }}"        | base64 -d > bridge-react-app/src/App.jsx
          echo "${{ secrets.SERVICE_WORKER_BASE64 }}" | base64 -d > service-worker.js
          echo "${{ secrets.MANIFEST_BASE64 }}"       | base64 -d > site.webmanifest

      # 5) Fail fast if any decoded file is empty/missing
      - name: Verify sensitive files
        run: |
          echo "Verifying files exist and are non-empty:"
          ls -l main.ts service-worker.js site.webmanifest
          test -s main.ts
          test -s service-worker.js
          test -s site.webmanifest
          test -s bridge-react-app/src/useBridge.jsx
          test -s bridge-react-app/src/App.jsx

      # 6) Install Solana web deps in the React app
      - name: Install Solana packages
        working-directory: bridge-react-app
        run: |
          npm install @solana/wallet-adapter-react @solana/wallet-adapter-react-ui @solana/wallet-adapter-base @solana/web3.js

      # 7) Install app deps, refresh browserslist DB, build
      - name: Build React app
        working-directory: bridge-react-app
        run: |
          npm install
          npx update-browserslist-db@latest --yes
          npm run build

      # 8) Show build output (useful for debugging)
      - name: Verify Build Output
        run: |
          echo "Build output:"
          find bridge-react-app/dist -maxdepth 2 -type f -printf "%P\n" | sort | head -n 200

      # 9) Deploy to Deno Deploy
      - name: Upload to Deno Deploy
        uses: denoland/deployctl@v1
        with:
          project: "j1tfyi-ccp"
          entrypoint: "./main.ts"
          include: |
            main.ts
            deno.json
            deps.client.ts
            deps.server.ts
            bridge-react-app/dist/**/*
            service-worker.js
            site.webmanifest
        env:
          DENO_DEPLOY_TOKEN: ${{ secrets.DENO_DEPLOY_TOKEN }}

      # 10) Cleanup local secrets
      - name: Cleanup
        if: always()
        run: |
          rm -f main.ts
          rm -f bridge-react-app/src/useBridge.jsx
          rm -f bridge-react-app/src/App.jsx
          rm -f service-worker.js
          rm -f site.webmanifest
