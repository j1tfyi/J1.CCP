name: Check Affiliate Fees

on:
  workflow_dispatch:  # Manual trigger only

jobs:
  check-fees:
    name: Check Available Fees
    runs-on: ubuntu-latest

    steps:
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Check available fees
        run: |
          mkdir -p scripts

          # Create a minimal check script
          cat > scripts/check-fees.js << 'EOF'
          const https = require('https');

          // Configuration from main.ts
          const CONFIG = {
            DEBRIDGE_REFERRAL_CODE: "32422",
            JUPITER_ACCOUNTS: {
              SWAP_TRIGGER: "9b2JyZnf3CJAx5JSiCNMSWQAiqJAJVUSxvq5W2trYho7",
              ULTRA: "EDgCbN6bPKvFgY4fjmiFq44a4EY1hMnAqXzQ2rK9H7XT"
            },
            SOLANA_BENEFICIARY: "6j8QLb8D7wEfgAMSBy7HkuduBeysVJQimLHuwjBCW4gU",
            EVM_BENEFICIARY: "0x4A671c9424a95eA56da39D6fd13928e6aFB0Eb3E"
          };

          console.log("=== Affiliate Fee Status Check ===\n");
          console.log("Configuration:");
          console.log("- deBridge Referral Code:", CONFIG.DEBRIDGE_REFERRAL_CODE);
          console.log("- Jupiter Swap+Trigger Account:", CONFIG.JUPITER_ACCOUNTS.SWAP_TRIGGER);
          console.log("- Jupiter Ultra Account:", CONFIG.JUPITER_ACCOUNTS.ULTRA);
          console.log("- Solana Beneficiary:", CONFIG.SOLANA_BENEFICIARY);
          console.log("- EVM Beneficiary:", CONFIG.EVM_BENEFICIARY);
          console.log("\n");

          // Check deBridge orders
          async function checkDeBridgeOrders() {
            return new Promise((resolve) => {
              const postData = JSON.stringify({
                giveChainIds: [7565164], // Solana
                takeChainIds: [],
                orderStates: ["ClaimedUnlock"],
                filter: CONFIG.SOLANA_BENEFICIARY,
                referralCode: CONFIG.DEBRIDGE_REFERRAL_CODE,
                skip: 0,
                take: 10
              });

              const options = {
                hostname: 'stats-api.dln.trade',
                path: '/api/Orders/filteredList',
                method: 'POST',
                headers: {
                  'Content-Type': 'application/json',
                  'Content-Length': postData.length
                }
              };

              const req = https.request(options, (res) => {
                let data = '';
                res.on('data', (chunk) => data += chunk);
                res.on('end', () => {
                  try {
                    const result = JSON.parse(data);
                    const orders = result.orders || [];
                    console.log(`üì¶ deBridge unclaimed orders: ${orders.length}`);
                    if (orders.length > 0) {
                      console.log("   First few order IDs:");
                      orders.slice(0, 3).forEach(order => {
                        console.log(`   - ${order.orderId?.stringValue || 'Unknown'}`);
                      });
                    }
                  } catch (e) {
                    console.log("‚ùå Could not fetch deBridge orders");
                  }
                  resolve();
                });
              });

              req.on('error', (e) => {
                console.log("‚ùå deBridge API error:", e.message);
                resolve();
              });

              req.write(postData);
              req.end();
            });
          }

          async function main() {
            console.log("üîç Checking for available affiliate fees...\n");

            // Check deBridge
            await checkDeBridgeOrders();

            console.log("\nüí° Jupiter Fees:");
            console.log("   Check dashboard: https://referral.jup.ag/dashboard");
            console.log("   Connect wallet to see unclaimed fees");

            console.log("\nüìä For detailed information:");
            console.log("   - Run the full withdrawal workflow");
            console.log("   - Check Solscan for transaction history");

            console.log("\n‚úÖ Status check complete");
          }

          main().catch(console.error);
          EOF

          node scripts/check-fees.js

      - name: Display instructions
        run: |
          echo ""
          echo "=== How to Withdraw Fees ==="
          echo ""
          echo "1. Manually trigger the 'Withdraw Affiliate Fees' workflow"
          echo "2. It will automatically run every Monday at 2 AM UTC"
          echo "3. Ensure these secrets are configured:"
          echo "   - SOLANA_PRIVATE_KEY (base58 encoded)"
          echo "   - SCRIPTS_WITHDRAW_FEES_BASE64"
          echo "   - SCRIPTS_JUPITER_SETUP_BASE64"
          echo "   - SCRIPTS_PACKAGE_JSON_BASE64"
          echo ""
          echo "‚ö†Ô∏è  Never share or expose your private keys!"